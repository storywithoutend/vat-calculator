import fs from "fs"
import { it, describe, expect } from "vitest"
import { tabDelimitedTextToJSON } from "./tabDelimitedTextToJSON.js"

const PROPERTIES = [
  "UNIQUE_ACCOUNT_IDENTIFIER",
  "ACTIVITY_PERIOD",
  "SALES_CHANNEL",
  "MARKETPLACE",
  "PROGRAM_TYPE",
  "TRANSACTION_TYPE",
  "TRANSACTION_EVENT_ID",
  "ACTIVITY_TRANSACTION_ID",
  "TAX_CALCULATION_DATE",
  "TRANSACTION_DEPART_DATE",
  "TRANSACTION_ARRIVAL_DATE",
  "TRANSACTION_COMPLETE_DATE",
  "SELLER_SKU",
  "ASIN",
  "ITEM_DESCRIPTION",
  "ITEM_MANUFACTURE_COUNTRY",
  "QTY",
  "ITEM_WEIGHT",
  "TOTAL_ACTIVITY_WEIGHT",
  "COST_PRICE_OF_ITEMS",
  "PRICE_OF_ITEMS_AMT_VAT_EXCL",
  "PROMO_PRICE_OF_ITEMS_AMT_VAT_EXCL",
  "TOTAL_PRICE_OF_ITEMS_AMT_VAT_EXCL",
  "SHIP_CHARGE_AMT_VAT_EXCL",
  "PROMO_SHIP_CHARGE_AMT_VAT_EXCL",
  "TOTAL_SHIP_CHARGE_AMT_VAT_EXCL",
  "GIFT_WRAP_AMT_VAT_EXCL",
  "PROMO_GIFT_WRAP_AMT_VAT_EXCL",
  "TOTAL_GIFT_WRAP_AMT_VAT_EXCL",
  "TOTAL_ACTIVITY_VALUE_AMT_VAT_EXCL",
  "PRICE_OF_ITEMS_VAT_RATE_PERCENT",
  "PRICE_OF_ITEMS_VAT_AMT",
  "PROMO_PRICE_OF_ITEMS_VAT_AMT",
  "TOTAL_PRICE_OF_ITEMS_VAT_AMT",
  "SHIP_CHARGE_VAT_RATE_PERCENT",
  "SHIP_CHARGE_VAT_AMT",
  "PROMO_SHIP_CHARGE_VAT_AMT",
  "TOTAL_SHIP_CHARGE_VAT_AMT",
  "GIFT_WRAP_VAT_RATE_PERCENT",
  "GIFT_WRAP_VAT_AMT",
  "PROMO_GIFT_WRAP_VAT_AMT",
  "TOTAL_GIFT_WRAP_VAT_AMT",
  "TOTAL_ACTIVITY_VALUE_VAT_AMT",
  "PRICE_OF_ITEMS_AMT_VAT_INCL",
  "PROMO_PRICE_OF_ITEMS_AMT_VAT_INCL",
  "TOTAL_PRICE_OF_ITEMS_AMT_VAT_INCL",
  "SHIP_CHARGE_AMT_VAT_INCL",
  "PROMO_SHIP_CHARGE_AMT_VAT_INCL",
  "TOTAL_SHIP_CHARGE_AMT_VAT_INCL",
  "GIFT_WRAP_AMT_VAT_INCL",
  "PROMO_GIFT_WRAP_AMT_VAT_INCL",
  "TOTAL_GIFT_WRAP_AMT_VAT_INCL",
  "TOTAL_ACTIVITY_VALUE_AMT_VAT_INCL",
  "TRANSACTION_CURRENCY_CODE",
  "COMMODITY_CODE",
  "STATISTICAL_CODE_DEPART",
  "STATISTICAL_CODE_ARRIVAL",
  "COMMODITY_CODE_SUPPLEMENTARY_UNIT",
  "ITEM_QTY_SUPPLEMENTARY_UNIT",
  "TOTAL_ACTIVITY_SUPPLEMENTARY_UNIT",
  "PRODUCT_TAX_CODE",
  "DEPATURE_CITY",
  "DEPARTURE_COUNTRY",
  "DEPARTURE_POST_CODE",
  "ARRIVAL_CITY",
  "ARRIVAL_COUNTRY",
  "ARRIVAL_POST_CODE",
  "SALE_DEPART_COUNTRY",
  "SALE_ARRIVAL_COUNTRY",
  "TRANSPORTATION_MODE",
  "DELIVERY_CONDITIONS",
  "SELLER_DEPART_VAT_NUMBER_COUNTRY",
  "SELLER_DEPART_COUNTRY_VAT_NUMBER",
  "SELLER_ARRIVAL_VAT_NUMBER_COUNTRY",
  "SELLER_ARRIVAL_COUNTRY_VAT_NUMBER",
  "TRANSACTION_SELLER_VAT_NUMBER_COUNTRY",
  "TRANSACTION_SELLER_VAT_NUMBER",
  "BUYER_VAT_NUMBER_COUNTRY",
  "BUYER_VAT_NUMBER",
  "VAT_CALCULATION_IMPUTATION_COUNTRY",
  "TAXABLE_JURISDICTION",
  "TAXABLE_JURISDICTION_LEVEL",
  "VAT_INV_NUMBER",
  "VAT_INV_CONVERTED_AMT",
  "VAT_INV_CURRENCY_CODE",
  "VAT_INV_EXCHANGE_RATE",
  "VAT_INV_EXCHANGE_RATE_DATE",
  "EXPORT_OUTSIDE_EU",
  "INVOICE_URL",
  "BUYER_NAME",
  "ARRIVAL_ADDRESS",
  "SUPPLIER_NAME",
  "SUPPLIER_VAT_NUMBER",
  "TAX_REPORTING_SCHEME",
  "TAX_COLLECTION_RESPONSIBILITY",
]

describe("tabDelimitedTextToJson", () => {
  it("should convert tab delimited text to json", async () => {
    const sampleData = fs.readFileSync("../data/682478019758.txt", "utf-8")
    const json = await tabDelimitedTextToJSON(sampleData)
    console.log(json)
    expect(
      json.every((row: any) =>
        Object.keys(row).every((key: string) => PROPERTIES.includes(key)),
      ),
    ).toBe(true)
  })
})
